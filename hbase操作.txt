HBase中默认的region达到256M则会进行拆分(split)。
HBase中的MemStore默认达到64M则会进行刷写到存储中（HDFS）。


HBase合并,HBase分为小合并(minor)和大合并(major):
	
	小合并(minor)：小合并(minor)把多个小HFile合并成一个大HFile。因为读出一条完整的行可能引用很多文件，限制HFile的数量对于读性能很重要。执行合并时，HBase读出已有的多个HFile的内容，把记录写入到一个新文件中，然后把新文件设置为激活状态，删除构成这个新文件的所有老文件。HBase根据文件的号码和大小决定合并哪些文件。小合并设计触发点是轻微影响HBase的性能，所以设计的HFile的数量有上限。

	大合并(major)：大合并将处理给定region的一个列族的所有HFile。大合并完成后，这个列族的所有HFile合并成一个文件。大合并(marjor)是HBase清理被删除记录的唯一机会。因为不能保证被删除的记录和墓碑标记记录在一个HFile中，而大合并可以确保同时访问到两种记录。


HBase默认的堆内存为1G，在hbase-env.sh中配置:
	export HBASE_HEAPSIZE=4096
在HBase中每个列族下的所有列都是以一个HFile进行存储。
HFile中存储的是经过排序的键值隐射结构。文件内部由连续的块组成，块的索引信息存储在文件的尾部。当把HFile文件加载到内存时，索引信息就会优先被加载到内存中，每个块的默认大小为64KB。
每次更新数据时，都是先将数据记录在提交日志中，之后才会将这些数据写入内存中的memstore中。一旦内存保存的数据的累计大小超过给定的值，系统就会将这些数据移除内存作为一个HFile文件刷写到磁盘中。数据移除内存后，系统会丢弃对应的提交日志，只保留未持久化到磁盘的提交日志。

过滤器：
	DependentColumnFilter：指定一个参考列或引用列来过滤其他列的过滤器，需要指定列族和列，如果某行不包含引用列，则不返回此列。如果某行包含这个指定的列，则看返回所有的其具有相同时间戳的所有键值对，构造器中有个boolean参数决定是否返回指定的列(在包含指定列的行中)。
	SingleColumnValueFilter：用一列的值决定是否被过滤。当设置了setFilterIfMissing(true)时，如果某行不包含这个指定列，则过滤掉这行。如果设置setLatestVersionOnly(true)时，只返回最新的版本。
















